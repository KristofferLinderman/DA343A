package p1;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.Observable;

import javax.swing.Icon;

public class IconClient extends Observable {

	public IconClient(String ip, int port) {
		new ClientThread(ip, port).start();
	}
	
	public void notifyMe(Icon icon){
		setChanged();
		notifyObservers(icon);
	}

	private class ClientThread extends Thread {
		private Icon icon;
		private Socket socket;
		private ObjectInputStream ois;

		public ClientThread(String ip, int port) {
			try {
				socket = new Socket(ip, port);
				System.out.println("socket");
				ois = new ObjectInputStream(socket.getInputStream());
				System.out.println("oos");
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		public void run() {
			while (true) {
				try {
					Icon icon = (Icon) ois.readObject();
					System.out.println("read object");
					notifyMe(icon);
					System.out.println("dï¿½r");
				} catch (ClassNotFoundException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}

	}
//		private String ipAddress;
//		private int serverPort;
//
//		public ClientThread(String ipAddress, int serverPort) {
//			this.ipAddress = ipAddress;
//			this.serverPort = serverPort;
//		}
//
//		public void run() {
//			try (Socket socket = new Socket(ipAddress, serverPort);
//					ObjectInputStream input = new ObjectInputStream(socket.getInputStream())) {
//				while (true) {
//					icon = (Icon) input.readObject();
//					setChanged();
//					notifyObservers(icon);
//				}
//			} catch (Exception e) {
//				System.out.println(e);
//			}
//		}
//
//	}
}
